<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webgis.mapper.TourMapper">

    <!--    几何查询点-->
    <select id="queryPoint" resultType="com.webgis.entity.table.ScenicEntity">
        select *
        from info
        WHERE x >= #{xmin}
          and y >= #{ymin}
          and x &lt;= #{xmax}
          and y &lt;= #{ymax}
    </select>

    <!--    景点查询所有信息-->
    <select id="queryAll" resultType="com.webgis.entity.table.ScenicEntity">
        select *
        from info
    </select>

    <!--    查询景点分数及评论个数-->
    <select id="coName" resultType="com.webgis.entity.table.CoScore">
        select *
        from coscore
        where name = #{name}
    </select>

    <!--    删除信息不对应的景点-->
    <delete id="deSC" parameterType="com.webgis.entity.table.ScenicEntity">
        delete
        from info
        where id = #{id}
    </delete>

    <!--    更新景点热度和分数-->
    <update id="upSH" parameterType="com.webgis.entity.table.ScenicEntity">
        update info
        set hot=#{hot},
            score=#{score}
        where id = #{id}
    </update>

    <!--查询景点个数-->
    <select id="coPC" resultType="com.webgis.entity.table.CoPC">
        select *
        from compc
        where name = #{name}
    </select>

    <!--更新评论省、市-->
    <update id="upPC" parameterType="com.webgis.entity.table.CoPC">
        update compc
        set province= #{sheng},
            city= #{shi}
        where name = #{name}
    </update>

    <!--获取评论城市列表-->
    <select id="cRank" resultType="map">
        select distinct city
        from comment
    </select>

    <!--    查询某城市有多少条评论-->
    <select id="cCount" resultType="int">
        select count(*)
        from comment
        where city = #{city}
    </select>

    <!--    新表插入城市和评论数-->
    <insert id="inCC" parameterType="com.webgis.entity.table.CityRank">
        insert into cityrank(id, city, comcount)
        values (#{id}, #{city}, #{comcount})
    </insert>

    <!--    查询该城市下的景点名及分数-->
    <select id="cScenicCount" resultType="com.webgis.entity.table.ScenicEntity">
        select name, score
        from info
        where city = #{city}
    </select>

    <!--获取城市表城市名-->
    <select id="getcity" resultType="com.webgis.entity.table.CityRank">
        select city
        from cityrank
    </select>

    <!--更新城市表的评论数和分数-->
    <update id="upCityScore" parameterType="com.webgis.entity.table.CityRank">
        update cityrank
        set sccount = #{sccount},
            scscore = #{scscore}
        where city = #{city}
    </update>

    <!--查询排名前十的城市-->
    <select id="cityRank" resultType="com.webgis.entity.table.CityRank">
        select *
        from cityrank
        order by hotrank limit 0,10
    </select>

    <!--获取点数据-->
    <select id="getPoint" resultType="com.webgis.entity.table.PointEntity">
        select *
        from point
    </select>

    <!--评论表中添加经纬度-->
    <update id="upLaLg" parameterType="com.webgis.entity.table.CommentEntity">
        update comment
        set longitude = #{longitude},
            latitude  = #{latitude}
        where name = #{name}
    </update>

    <!--查询景点经纬度-->
    <select id="queryLL" resultType="com.webgis.entity.table.ScenicEntity">
        select name, x, y
        from point
    </select>

    <!--查询评论坐标点-->
    <select id="comPoint" resultType="com.webgis.entity.table.ComPoint">
        select *
        from compoint
    </select>

    <!--依据景点名称获取评论所有信息前20条-->
    <select id="getComment" resultType="com.webgis.entity.table.CommentEntity">
        select *
        from comment
        where scenic_name = #{name} limit 0,20
    </select>

    <!--依据景点名称获取评论-->
    <select id="getCom" resultType="com.webgis.entity.table.CommentEntity">
        select score, release_time
        from comment
        where scenic_name = #{name}
    </select>

    <!--南京景点推荐-->
    <select id="nanjingRe" resultType="com.webgis.entity.table.NanJingEntity">
        select *
        from 南京景点
        order by ${preference} ASC
    </select>

    <!--城市评论-->
    <select id="cityCom" resultType="com.webgis.entity.table.CommentEntity">
        select *
        from comment
        where city = #{city} limit 0,20
    </select>

    <!--获取表中最新的时间-->
    <select id="lastCom" resultType="com.webgis.entity.table.CommentEntity">
        select release_time
        from comment
        ORDER BY release_time DESC LIMIT 1
    </select>

    <!--根据起止日期获取每天评论数-->
    <select id="commentDay" resultType="com.webgis.entity.CommentDay">
        SELECT release_time, count(*)as count, sum(score=5)as score
        FROM comment_total
        WHERE DATE_FORMAT(release_time
            , '%Y-%m') BETWEEN #{startDate}
          AND #{endDate}
        GROUP BY release_time
        ORDER BY release_time
    </select>

    <!--根据日期获取每月景点热度-->
    <select id="ScenicDay" resultType="com.webgis.entity.ScenicDay">
        SELECT name, count(name)as count,date
        FROM compoint
        WHERE date LIKE CONCAT(#{time}, '%')
        GROUP BY name, date
        ORDER BY date ASC, count DESC
    </select>

    <!--获取起止日期游记数-->
    <select id="travelDay" resultType="com.webgis.entity.CommentDay">
        SELECT release_time, count(*)as count
        FROM travel
        WHERE DATE_FORMAT(release_time
            , '%Y-%m') BETWEEN #{startDate}
          AND #{endDate}
        GROUP BY release_time
        ORDER BY release_time
    </select>

    <!--根据日期获取每月城市热度-->
    <select id="CityDay" resultType="com.webgis.entity.ScenicDay">
        SELECT city as name, count(city)as count,date
        FROM compoint
        WHERE date LIKE CONCAT(#{time}, '%')
        GROUP BY city, date
        ORDER BY date ASC, count DESC
    </select>

    <!--获取景点数、评论数、游记数-->
    <select id="GetSCT" resultType="com.webgis.entity.table.SCT">
        SELECT count(*) info
        FROM scenic_total
        UNION
        SELECT count(*)
        FROM comment_total
        UNION
        SELECT count(*)
        FROM travel
    </select>

    <!--获取城市词云-->
    <select id="GetWC" resultType="com.webgis.entity.table.WordCloud">
        SELECT *
        FROM city_wordcloud
        WHERE city = #{city}
    </select>

    <!--省市流出评论数-->
    <select id="OutFlow" resultType="com.webgis.entity.table.FlowEntity">
        SELECT ${cORp} AS destination, count(*) AS count
        FROM flow
        WHERE author_place = #{place}
        GROUP BY ${cORp}, author_place
        ORDER BY count DESC
    </select>

    <!--省市流入评论数-->
    <select id="PutFlow" resultType="com.webgis.entity.table.FlowEntity">
        SELECT author_place AS destination, count(*) AS count
        FROM flow
        WHERE ${cORp} = #{place}
        GROUP BY author_place, ${cORp}
        ORDER BY count DESC
    </select>

    <!--省市流出平均分数-->
    <select id="OutScore" resultType="com.webgis.entity.table.OPScore">
        SELECT ${cORp} AS destination, AVG(score) AS score
        FROM flow
        WHERE author_place = #{place}
        GROUP BY ${cORp}
        ORDER BY score DESC
    </select>

    <!--省市流入平均分数-->
    <select id="PutScore" resultType="com.webgis.entity.table.OPScore">
        SELECT author_place AS destination, AVG(score) AS score
        FROM flow
        WHERE ${cORp} = #{place}
        GROUP BY author_place, ${cORp}
        ORDER BY score DESC
    </select>

    <select id="OutDay" resultType="com.webgis.entity.table.OPDay">
        SELECT release_time, count(*)as count
        FROM flow
        WHERE DATE_FORMAT(release_time
            , '%Y-%m') BETWEEN '2019-01'
          AND '2022-02'
          AND author_place = #{place}
        GROUP BY release_time
        ORDER BY release_time
    </select>

    <select id="PutDay" resultType="com.webgis.entity.table.OPDay">
        SELECT release_time, count(*)as count
        FROM flow
        WHERE DATE_FORMAT(release_time
            , '%Y-%m') BETWEEN '2019-01'
          AND '2022-02'
          AND ${cORp} = #{place}
        GROUP BY release_time
        ORDER BY release_time
    </select>

    <select id="OutScenic" resultType="com.webgis.entity.table.FlowEntity">
        SELECT scenic_name AS destination, count(*) count
        FROM flow
        WHERE author_place = #{place}
        GROUP BY destination
        ORDER BY count DESC
    </select>

    <select id="PutScenic" resultType="com.webgis.entity.table.FlowEntity">
        SELECT scenic_name AS destination, count(*) count
        FROM flow
        WHERE ${cORp} = #{place}
        GROUP BY destination
        ORDER BY count DESC
    </select>

</mapper>
